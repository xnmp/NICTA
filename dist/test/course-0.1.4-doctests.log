Test suite doctests: RUNNING...
Testing src/Course/List.hs
Examples: 58  Tried: 58  Errors: 0  Failures: 0
Testing src/Course/Functor.hs
Examples: 75  Tried: 75  Errors: 0  Failures: 0
Testing src/Course/Applicative.hs
Examples: 140  Tried: 140  Errors: 0  Failures: 0
Testing src/Course/Monad.hs
### Failure in src/Course/Monad.hs:37: expression `Id (+10) <*> Id 8'
expected: Id 18
 but got: *** Exception: todo: Course.Monad#(>>=)
### Failure in src/Course/Monad.hs:82: expression `(\x -> Id(x+1)) =<< Id 2'
expected: Id 3
 but got: *** Exception: todo: Course.Monad (=<<)#instance Id
### Failure in src/Course/Monad.hs:94: expression `(\n -> n :. n :. Nil) =<< (1 :. 2 :. 3 :. Nil)'
expected: [1,1,2,2,3,3]
 but got: *** Exception: todo: Course.Monad (=<<)#instance List
### Failure in src/Course/Monad.hs:106: expression `(\n -> Full (n + n)) =<< Full 7'
expected: Full 14
 but got: *** Exception: todo: Course.Monad (=<<)#instance Optional
### Failure in src/Course/Monad.hs:118: expression `((*) =<< (+10)) 7'
expected: 119
 but got: *** Exception: todo: Course.Monad (=<<)#instance ((->) t)
### Failure in src/Course/Monad.hs:130: expression `join ((1 :. 2 :. 3 :. Nil) :. (1 :. 2 :. Nil) :. Nil)'
expected: [1,2,3,1,2]
 but got: *** Exception: todo: Course.Monad#join
### Failure in src/Course/Monad.hs:152: expression `((+10) >>= (*)) 7'
expected: 119
 but got: *** Exception: todo: Course.Monad#(>>=)
### Failure in src/Course/Monad.hs:167: expression `((\n -> n :. n :. Nil) <=< (\n -> n+1 :. n+2 :. Nil)) 1'
expected: [2,2,3,3]
 but got: *** Exception: todo: Course.Monad#(<=<)
Examples: 160  Tried: 148  Errors: 0  Failures: 8
Test suite doctests: FAIL
Test suite logged to: dist/test/course-0.1.4-doctests.log
